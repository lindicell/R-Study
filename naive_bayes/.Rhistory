#
# adicionando um novo vetor ao data.frame já existente
#
cor_olhos = c("verde", "azul", "castanho", "preto")
pesquisa = cbind(pesquisa, cor_olhos)
pesquisa
#
# Informações sobre o data.frame
#
str(pesquisa) # resumo sobre o data.frame
dim(pesquisa) # saída 4 5 (4 linhas e 5 colunas)
length(pesquisa)
#
# Obtendo o vetor de um data.frame
#
pesquisa$nome
pesquisa$pais
#
# Extraindo um único valor
#
pesquisa[1,1] # mostra Brasil linha 1 coluna 1 E mostra também os níveis porque é tipo factor
pesquisa[3,2]
#
# numero de linhas e colunas do data.frame
#
nrow(pesquisa)
ncol(pesquisa)
#
# Primeiros e últimos elementos do data.frame
#
head(pesquisa) # retorna as 5 primeiras linhas do data.frame
tail(pesquisa) # retorna as 5 últimas linas do data.frame
#
# Filtro para o data.frame
#
# Antes da vírgula restrição na linha e depois da vírgula restrição de coluna
#
pesquisa[codigo == 4,c("nome", "altura")]
#
# Data.frame nomeado
#
names(pesquisa) <- c("País", "Nome", "Altura", "Código", "Olhos")
pesquisa
colnames(pesquisa) <- c("Var 1", "Var 2", "Vare 3", "Var 4", "Var 5")
rownames(pesquisa) <- c("Obs 1", "Obs 2", "Obs 3", "Obs 4")
pesquisa
class(fac_vet1)
# Criando factor
#
vet1 <- c("Macho", "Femea", "Femea", "Macho", "Macho")
vet1
fac_vet1 <- factor(vet1)
fac_vet1
class(vet1)
class(fac_vet1)
vet1 <- c("Macho", "Femea", "Femea", "Macho", "Macho")
vet1
fac_vet1 <- factor(vet1)
fac_vet1
class(vet1)
class(fac_vet1)
vet1 <- c("Macho", "Femea", "Femea", "Macho", "Macho")
vet1
fac_vet1 <- factor(vet1)
fac_vet1
class(vet1)
class(fac_vet1)
vet1 <- c("Cachorro", "Gato", "Gato", "Cachorro", "Gato")
vet1
fac_vet1 <- factor(vet1)
fac_vet1
class(vet1)
class(fac_vet1)
vetCachorroGato <- c("Cachorro", "Gato", "Gato", "Cachorro", "Gato")
vetCachorroGato
vetCachorroGato <- factor(vetCachorroGato)
fac_vetCachorroGato
class(vetCachorroGato)
class(fac_vetCachorroGato)
animais <- c("Leao", "Pantera", "Tigre", "Onça", "Gato")
animais
class(animais)
fac_animais <- factor(animais)
fac_animais
class(animais)
class(fac_animais)
levels(fac_animais)
vetanimais <- c("Cachorro", "Gato", "Gato", "Cachorro", "Gato")
vetanimais
fac_vet1 <- factor(vetanimais)
fac_vet1
class(vetanimais)
class(fac_vet1)
vetanimais <- c("Cachorro", "Gato", "Gato", "Cachorro", "Gato")
vetanimais
fac_vetanimais <- factor(vetanimais)
fac_vetanimais
class(vetanimais)
class(fac_vetanimais)
felinos <- c("Leao", "Pantera", "Tigre", "Onça", "Gato")
felinos
class(felinos)
fac_animais <- factor(felinos)
fac_animais
class(felinos)
class(fac_animais)
levels(fac_animais)
ensino <- c("Fundamental", "Medio", "Faculdade", "Mestrado", "Doutorado")
ensino
fac_grad <- factor (ensino, order = T, levels = c( "Bacharelado", "Mestrado", "Doutorado"))
fac_grad
levels(fac_grad)
grad <- c("Mestrado", "Doutorado", "Bacharelado", "Mestrado", "Mestrado")
grad
fac_grad <- factor (grad, order = T, levels = c( "Bacharelado", "Mestrado", "Doutorado"))
fac_grad
levels(fac_grad)
ensino <- c("Fundamental", "Medio", "Bacharelado", "Fundamental", "Fundamental")
ensino
fac_grad <- factor (ensino, order = T, levels = c( "Bacharelado", "Mestrado", "Doutorado"))
fac_grad
levels(fac_grad)
ensino <- c("Fundamental", "Medio", "Bacharelado", "Fundamental", "Fundamental")
ensino
fac_grad <- factor (ensino, order = T, levels = c( "Bacharelado", "Fundamental", "Medio"))
fac_grad
levels(fac_grad)
ensino <- c("Fundamental", "Medio", "Bacharelado", "Fundamental", "Fundamental")
ensino
fac_grad <- factor (ensino, order = T, levels = c( "Bacharelado", "Fundamental", "Medio"))
fac_grad
levels(fac_grad)
#
# sumarizar os dados
#
summary(fac_grad)
summary(ensino)
simenao <- c("S", "S", "N", "N", "N", "N", "S","N","S","S","N", "N","S","S","S")
simenao
fac_vet2 <- factor(simenao)
fac_vet2
levels(fac_vet2) <- c("Sim", "Não")
fac_vet2
summary(fac_vet2)
summary(simenao)
#
data = c(1,2,2,3,1,2,3,3,1,2,3,3,1)
fdata = factor(data)
fdata
dias = c(5,6,7,7,7,5,6,6,5,5,6,7,5)
fdata = factor(dias)
fdata
rdata = factor(data, labels = c("I", "II", "III"))
rdata
rnum = factor(data, labels = c("IV", "V", "XV"))
rnum
estados <- c("RS", "SP", "SP", "RJ", "RS", "RS", "SP", "RJ", "SP")
estados
f.set1 <- factor(estados) # f.set1 é o nome do objeto que pode conter o .
f.estados
class(f.estados)
is.ordered(f.estados)
estados <- c("RS", "SP", "SP", "RJ", "RS", "RS", "SP", "RJ", "SP")
estados
f.set1 <- factor(estados) # f.set1 é o nome do objeto que pode conter o .
f.set1
class(f.set1)
is.ordered(f.set1)
o.set1 <- factor(set1,
levels = c("RS", "SP", "RJ"),
ordered = T)
o.set1
is.ordered(o.set1)
as.numeric(o.set1)
table(o.set1)
o.estados <- factor(estados,
levels = c("RS", "SP", "RJ"),
ordered = T)
o.estados
is.ordered(o.estados)
as.numeric(o.estados)
table(o.estados)
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Sexo)
levels(df$Etnia)
summary(df$Sexo)
df <- read.csv2("religiao.csv", sep = ',')
df
View(df)
str(df)
levels(df$Sexo)
levels(df$Religiao)
summary(df$Sexo)
df <- read.csv2("religiao.csv", sep = ',')
df
View(df)
str(df)
levels(df$Sexo)
levels(df$Religiao)
summary(df$Sexo)
#
# criar um plot
#
plot(df$Idade~df$Religiao, xlab = 'Religiao', ylab = 'Idade', main = 'Idade por Religiao')
df <- read.csv2("religiao.csv", sep = ',')
df
View(df)
str(df)
levels(df$Etnia)
levels(df$Religiao)
summary(df$Etnia)
#
# criar um plot
#
plot(df$Etnia~df$Religiao, xlab = 'Religiao', ylab = 'Etnia', main = 'Etnia por Religiao')
df <- read.csv2("religiao.csv", sep = ',')
df
View(df)
str(df)
levels(df$Etnia)
levels(df$Religiao)
summary(df$Etnia)
#
# criar um plot
#
plot(df$Etnia~df$Religiao, xlab = 'Religiao', ylab = 'Etnia', main = 'Etnia por Religiao')
#
# regressão
#
summary(lm(df$Etnia~df$Religiao, data = df))
df <- read.csv2("etnia.csv", sep = ',')
df
View(df)
str(df)
levels(df$Religiao)
levels(df$Etnia)
summary(df$Religiao)
#
# criar um plot
#
plot(df$Idade~df$Etnia, xlab = 'Etnia', ylab = 'Idade', main = 'Idade por Etnia')
df <- read.csv2("etnia.csv", sep = ',')
df
View(df)
str(df)
levels(df$Religiao)
levels(df$Etnia)
summary(df$Religiao)
#
# criar um plot
#
plot(df$Idade~df$Etnia, xlab = 'Etnia', ylab = 'Idade', main = 'Idade por Etnia')
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Sexo)
levels(df$Etnia)
summary(df$Sexo)
#
# criar um plot
#
plot(df$Idade~df$Etnia, xlab = 'Etnia', ylab = 'Idade', main = 'Idade por Etnia')
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Sexo)
levels(df$Etnia)
summary(df$Sexo)
#
# criar um plot
#
plot(df$Idade~df$Etnia, xlab = 'Etnia', ylab = 'Idade', main = 'Idade por Etnia')
#
# regressão
#
summary(lm(df$Idade~df$Etnia, data = df))
#
# transformando uma variável numérica para categórica
# estado civil é numérica, mas representa categoria
#
str(df)
df$Estado_Civil.Cat <- factor(df$Estado_Civil, labels = c( "Solteiro", "Casado", "Divorciado"))
str(df)
vec1 <- c(1001, 1002, 1003, 1004, 1005)
vec2 <- c(0, 1, 1, 0, 2)
vec3 <- c("verde", "laranja", "azul", "laranja", "verde")
#
numeros <- c(11, 22, 33, 44, 55)
letras <- c('a', 'b', 'c', 'd', 'e')
animais <- c("cachorro", "gato", "peixe", "formiga", "abelha")
# unindo vetores em um dataframe
df <- data.frame(numeros, letras, animais)
df
str(df)
#
# Níveis dos fatores
#
numeros <- c(11, 22, 33, 44, 55)
letras <- c('a', 'b', 'c', 'd', 'e')
animais <- c("cachorro", "gato", "peixe", "formiga", "abelha")
# unindo vetores em um dataframe
df <- data.frame(numeros, letras, animais)
df
str(df)
# verificando os levels do fator
levels(df$animais)
# criando nova coluna no df
df$cat1 <- factor(df$animais, labels = c("animal1", "animal3", "animal2"))
df
str(df)
df$cat2 <- factor(df$letras, labels = c( "f", "g", "h"))
df
levels(df$cat2)
summary(df)
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Religiao)
levels(df$Etnia)
summary(df$Religiao)
#
# criar um plot
#
plot(df$Religiao~df$Etnia, xlab = 'Etnia', ylab = 'Religiao', main = 'Religiao por Etnia')
#
# regressão
#
summary(lm(df$Religiao~df$Etnia, data = df))
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
#
# criar um plot
#
plot(df$Peso~df$Etnia, xlab = 'Etnia', ylab = 'Peso', main = 'Peso por Etnia')
#
# regressão
#
summary(lm(df$pESO~df$Etnia, data = df))
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
#
# criar um plot
#
plot(df$Peso~df$Etnia, xlab = 'Etnia', ylab = 'Peso', main = 'Peso por Etnia')
fac_animais <- factor(felinos)
# fatores e dataframes
#
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
#
# criar um plot
#
plot(df$Peso~df$Etnia, xlab = 'Etnia', ylab = 'Peso', main = 'Peso por Etnia')
#
# regressão
#
summary(lm(df$pESO~df$Etnia, data = df))
#
# transformando uma variável numérica para categórica
# estado civil é numérica, mas representa categoria
#
str(df)
df$Cores.Cat <- factor(df$Estado_Civil, labels = c( "Branco", "Preto", "Azul"))
str(df)
df
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
str(df)
levels(df$Peso)
levels(df$Etnia)
summary(df$Peso)
#
# criar um plot
#
plot(df$Peso~df$Etnia, xlab = 'Etnia', ylab = 'Peso', main = 'Peso por Etnia')
#
df <- read.csv2("etnias.csv", sep = ',')
df
View(df)
df <- read.csv2("etnias.csv", sep = ',')
df <- read.csv2("etnias.csv", sep = ',')
getwd()
setwd("/Users/Lindice")
getwd()
varDataFrame<-data.frame()
varDataFrame <-read.csv2("HCV-Egy-Data.csv",sep=",")
varDataFrame<-data.frame()
varDataFrame <-read.csv2("HCV-Egy-Data.csv",sep=",")
df<-data.frame()
df <-read.csv2("HCV-Egy-Data.csv",sep=",")
setwd("/Users/Lindice")
getwd()
df<-data.frame()
df <-read.csv2("HCV-Egy-Data.csv",sep=",")
install.packages(c("caret", "caTools", "e1071"))
base <- read.csv('censo.csv')
View(base)
str(base)
Leitura da base de dados e analise
base <- read.csv('censo.csv')
View(base)
str(base)
# Leitura da base de dados e analise
base <- read.csv('censo.csv')
View(base)
str(base)
# Leitura da base de dados e analise
base <- read.csv('censo.csv')
View(base)
str(base)
setwd("/Users/Lindice/Desktop/R-Study")
# Leitura da base de dados e analise
base <- read.csv('censo.csv')
View(base)
str(base)
setwd("/Users/Lindice/Desktop/R-Study/naive_bayes")
# Leitura da base de dados e analise
base <- read.csv('censo.csv')
View(base)
str(base)
table(dados$workclass)
levels(dados$workclass)
# Leitura da base de dados e analise
dados <- read.csv('censo.csv')
View(dados)
str(dados)
table(dados$workclass)
levels(dados$workclass)
dados <- read.csv('censo.csv')
View(dados)
str(dados)
table(dados$workclass)
levels(dados$workclass)
table(base$education)
levels(base$education)
base$workclass <- factor(base$workclass, levels = c(' Federal-gov', ' Local-gov', ' Private', ' Self-emp-inc', ' Self-emp-not-inc', ' State-gov', ' Without-pay'), labels = c(1, 2, 3, 4, 5, 6, 7))
base$X <- NULL
table(dados$native.country)
table(dados$native.country)
levels(dados$native.country)
dados$X <- NULL
dados$workclass <- factor(base$workclass, levels = c(' Federal-gov', ' Local-gov', ' Private', ' Self-emp-inc', ' Self-emp-not-inc', ' State-gov', ' Without-pay'), labels = c(1, 2, 3, 4, 5, 6, 7))
dados$education <- factor(base$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
dados$marital.status <- factor(base$marital.status, levels = c(' Divorced', ' Married-AF-spouse', ' Married-civ-spouse', ' Married-spouse-absent', ' Never-married', ' Separated', ' Widowed'), labels = c(1, 2, 3, 4, 5, 6, 7))
dados$occupation <- factor(base$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
dados$relationship <- factor(base$relationship, levels = c(' Husband', ' Not-in-family', ' Other-relative', ' Own-child', ' Unmarried', ' Wife'), labels = c(1, 2, 3, 4, 5, 6))
dados$race <- factor(base$race, levels = c(' Amer-Indian-Eskimo', ' Asian-Pac-Islander', ' Black', ' Other', ' White'), labels = c(1, 2, 3, 4, 5))
dados$sex <- factor(base$sex, levels = c(' Female', ' Male'), labels = c(0, 1))
dados$native.country <- factor(base$native.country, levels = c(' Cambodia', ' Canada', ' China', ' Columbia', ' Cuba', ' Dominican-Republic', ' Ecuador', ' El-Salvador', ' England', ' France', ' Germany', ' Greece', ' Guatemala', ' Haiti', ' Holand-Netherlands', ' Honduras', ' Hong', ' Hungary', ' India', ' Iran', ' Ireland', ' Italy', ' Jamaica', ' Japan', ' Laos', ' Mexico', ' Nicaragua', ' Outlying-US(Guam-USVI-etc)', ' Peru', ' Philippines', ' Poland', ' Portugal', ' Puerto-Rico', ' Scotland', ' South', ' Taiwan', ' Thailand', ' Trinadad&Tobago', ' United-States', ' Vietnam', ' Yugoslavia'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41))
dados$income <- factor(base$income, levels = c(' <=50K', ' >50K'), labels = c(0, 1))
# Escalonamento
dados[, 1] <- scale(base[, 1]) # atributo age
dados[, 3] <- scale(base[, 3]) # atributo final.weight
dados[, 5] <- scale(base[, 5]) # atributo education.num
dados[, 11:13] <- scale(base[, 11:13]) # atributos capital.gain até hour.per.week
Divisao da base entre treinamento e teste
#install.packages("caTools")
library(caTools)
set.seed(1)
divisao <- sample.split(dados$income, SplitRatio = 0.85)
base_treinamento <- subset(dados, divisao == TRUE)
base_teste <- subset(dados, divisao == FALSE)
View(base_treinamento)
View(base_teste)
#install.packages("e1071")
library(e1071)
classificador <- naiveBayes(x = base_treinamento[-15], y = base_treinamento$income)
classificador
# Avaliacao do modelo
previsoes <- predict(classificador, newdata = base_teste[-15])
previsoes
matriz_confusao <- table(base_teste[, 15], previsoes)
matriz_confusao
#install.packages("caret")
library(caret)
confusionMatrix(matriz_confusao)
